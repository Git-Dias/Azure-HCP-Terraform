name: üö® Terraform Infrastructure DESTROY

on:
  # Permite que este workflow seja acionado manualmente na aba 'Actions' do GitHub
  workflow_dispatch:
    inputs:
      ambiente:
        description: 'Ambiente a ser DESTRU√çDO (e.g., dev, homolog, prod). Deve ser consistente com o estado remoto.'
        required: true
        default: 'dev'
      confirmar_destroy:
        description: 'ATEN√á√ÉO! Digite "DESTROY" para confirmar a exclus√£o. QUALQUER outro valor abortar√°.'
        required: true
        default: ''

permissions:
  id-token: write
  contents: read

jobs:
  terraform_destroy:
    runs-on: ubuntu-latest
    
    # ‚ö†Ô∏è RECOMENDADO: Use um Environment para exigir aprova√ß√£o manual antes da execu√ß√£o
    # environment: Production 
    
    env:
      # Vari√°veis de ambiente que o Terraform e o Azure CLI precisam.
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # Garante que o OIDC (Azure Login) use as credenciais corretas
      # ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }} 
      # ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }} 

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          # Use o login por Service Principal se o OIDC n√£o estiver configurado para o destroy
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
          # OU use OIDC se configurado:
          # client-id: ${{ secrets.AZURE_CLIENT_ID }} 
          # tenant-id: ${{ secrets.AZURE_TENANT_ID }} 
          # subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

      - name: Terraform Init
        run: terraform -chdir=Azure init

      # üö® PASSO CR√çTICO: CHECAGEM DE SEGURAN√áA
      - name: üö® Valida√ß√£o de Confirma√ß√£o de Destroy
        if: github.event.inputs.confirmar_destroy != 'DESTROY'
        run: |
          echo "::error::‚ùå A opera√ß√£o de DESTROY foi abortada. O valor de confirma√ß√£o inserido ('${{ github.event.inputs.confirmar_destroy }}') n√£o √© 'DESTROY'."
          exit 1
      
      # O plan -destroy mostra TUDO o que ser√° exclu√≠do
      - name: Terraform Destroy Plan
        # O -var-file pode ser √∫til para selecionar vari√°veis de ambiente
        run: terraform -chdir=Azure plan -destroy -out=tfdestroyplan 

      - name: üöÄ Terraform DESTROY (Aplicar Exclus√£o)
        # Este step s√≥ roda se a checagem de seguran√ßa acima for aprovada
        if: github.event.inputs.confirmar_destroy == 'DESTROY'
        run: terraform -chdir=Azure apply -auto-approve tfdestroyplan
